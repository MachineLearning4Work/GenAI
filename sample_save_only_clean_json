import os
import shutil
import re

source_root = '/path/to/source/folder'
destination_root = '/path/to/source/folder/company_contract_json'  # Will be created inside the source root

# Create destination directory if it doesn't exist
os.makedirs(destination_root, exist_ok=True)

# Pattern to match folder names starting with "clean_filtered_text_"
pattern = re.compile(r'^clean_filtered_text_')

for dirpath, dirnames, filenames in os.walk(source_root):
    for dirname in dirnames:
        if pattern.match(dirname):
            source_dir = os.path.join(dirpath, dirname)

            # Recreate the relative path inside the destination folder
            relative_path = os.path.relpath(source_dir, source_root)
            dest_dir = os.path.join(destination_root, relative_path)

            shutil.copytree(source_dir, dest_dir, dirs_exist_ok=True)



================




import os
import shutil

# Set your source and target root directories
source_root = "/path/to/source/folder"
target_root = "/path/to/company_contract_json"

# Ensure the target directory exists
os.makedirs(target_root, exist_ok=True)

# Walk through the source folder
for dirpath, dirnames, filenames in os.walk(source_root):
    for dirname in dirnames:
        if dirname.startswith("clean_filtered_text_"):
            full_source_path = os.path.join(dirpath, dirname)
            
            # Build corresponding destination path
            relative_path = os.path.relpath(full_source_path, source_root)
            full_target_path = os.path.join(target_root, relative_path)

            # Copy the entire folder
            shutil.copytree(full_source_path, full_target_path, dirs_exist_ok=True)

print("Filtered subfolders copied successfully.")
