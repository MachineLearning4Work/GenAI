import os
import shutil
import re

# Set your source and destination root paths
source_root = '/path/to/source/folder'
destination_root = '/another/path/to/company_contract_json'

# Create the destination directory if it doesn't exist
os.makedirs(destination_root, exist_ok=True)

# Pattern to match folders starting with "clean_filtered_text_"
pattern = re.compile(r'^clean_filtered_text_')

# Track folder names already copied to avoid duplicates
copied_folder_names = set()

for dirpath, dirnames, filenames in os.walk(source_root):
    matched_dirs = [d for d in dirnames if pattern.match(d)]

    # Prevent os.walk from entering matched folders
    dirnames[:] = [d for d in dirnames if d not in matched_dirs]

    for dirname in matched_dirs:
        if dirname not in copied_folder_names:
            src_folder_path = os.path.join(dirpath, dirname)
            dest_folder_path = os.path.join(destination_root, dirname)

            if not os.path.exists(dest_folder_path):
                shutil.copytree(src_folder_path, dest_folder_path)
                copied_folder_names.add(dirname)




==========
import os
import shutil
import re

source_root = '/path/to/source/folder'
destination_root = '/path/to/source/folder/company_contract_json'  # Flat structure

# Create destination directory if it doesn't exist
os.makedirs(destination_root, exist_ok=True)

# Track copied filenames to avoid duplicates
copied_files = set()

# Pattern to match folder names starting with "clean_filtered_text_"
folder_pattern = re.compile(r'^clean_filtered_text_')

for dirpath, dirnames, filenames in os.walk(source_root):
    for dirname in dirnames:
        if folder_pattern.match(dirname):
            source_folder = os.path.join(dirpath, dirname)
            # Walk inside the matched folder to get all its files
            for root, _, files in os.walk(source_folder):
                for file in files:
                    if file not in copied_files:
                        source_file_path = os.path.join(root, file)
                        destination_file_path = os.path.join(destination_root, file)
                        shutil.copy2(source_file_path, destination_file_path)
                        copied_files.add(file)




==========

import os
import shutil
import re

source_root = '/path/to/source/folder'
destination_root = '/path/to/source/folder/company_contract_json'  # Will be created inside the source root

# Create destination directory if it doesn't exist
os.makedirs(destination_root, exist_ok=True)

# Pattern to match folder names starting with "clean_filtered_text_"
pattern = re.compile(r'^clean_filtered_text_')

for dirpath, dirnames, filenames in os.walk(source_root):
    for dirname in dirnames:
        if pattern.match(dirname):
            source_dir = os.path.join(dirpath, dirname)

            # Recreate the relative path inside the destination folder
            relative_path = os.path.relpath(source_dir, source_root)
            dest_dir = os.path.join(destination_root, relative_path)

            shutil.copytree(source_dir, dest_dir, dirs_exist_ok=True)



================




import os
import shutil

# Set your source and target root directories
source_root = "/path/to/source/folder"
target_root = "/path/to/company_contract_json"

# Ensure the target directory exists
os.makedirs(target_root, exist_ok=True)

# Walk through the source folder
for dirpath, dirnames, filenames in os.walk(source_root):
    for dirname in dirnames:
        if dirname.startswith("clean_filtered_text_"):
            full_source_path = os.path.join(dirpath, dirname)
            
            # Build corresponding destination path
            relative_path = os.path.relpath(full_source_path, source_root)
            full_target_path = os.path.join(target_root, relative_path)

            # Copy the entire folder
            shutil.copytree(full_source_path, full_target_path, dirs_exist_ok=True)

print("Filtered subfolders copied successfully.")
